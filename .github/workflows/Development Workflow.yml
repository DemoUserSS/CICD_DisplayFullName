name: Development workflow

on:
  push:
    branches:
      - Developer

# Here the environment variable is declared in workflow level
env:
  # Replace with your Orchestrator Values 
  PROJECT_NAME: CICD_Pipeline                        
  PROJECT_FOLDER: Shared
  ORCH_URL: https://cloud.uipath.com/
  ORCH_TENANT: DefaultTenant
  ORCH_CLIENT_ID: ${{ secrets.UIPATHCLIENTID }}
  ORCH_USER_KEY: ${{ secrets.UIPATHUSERKEY }}
  ORCH_ACC_NAME: ${{ secrets.UIPATHACCOUNTNAME }}
  CLI_URL: https://uipath.visualstudio.com/Public.Feeds/_artifacts/feed/UiPath-Official/NuGet/UiPath.CLI.Windows/overview/23.10.8753.32995
  

jobs:
  print-details:
    runs-on: ubuntu-latest
    steps:
      - name: echo-default-env-variables
        run: |
          echo "Home: ${HOME}"
          echo "GITHUB_WORKFLOW: ${GITHUB_WORKFLOW}"
          echo "GITHUB_ACTIONS: ${GITHUB_ACTIONS}"
          echo "GITHUB_ACTOR: ${GITHUB_ACTOR}"
          echo "GITHUB_REPOSITORY: ${GITHUB_REPOSITORY}"
          echo "GITHUB_EVENT_NAME: ${GITHUB_EVENT_NAME}"
          echo "GITHUB_WORKSPACE: ${GITHUB_WORKSPACE}"
          echo "GITHUB_SHA: ${GITHUB_SHA}"
          echo "GITHUB_REF: ${GITHUB_REF}"
  cleaner:
    runs-on: ubuntu-latest
    steps:
      - name: Runner workspace path
        run: |
          echo "Cleaning up previous run"
          rm -rf "${{ github.workspace }}"
  build-uipath-nuget-package:
    # You should be able to run on windows 2019 or windows latest
    needs: cleaner
    runs-on: windows-latest
    steps: 
      - name: Check out repository code
        # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
        uses: actions/checkout@v2
      - name: Build Nuget Package
        shell: pwsh
        run: ${{ github.workspace }}\Scripts\UiPathPack.ps1 ${{ github.workspace }}\project.json -destination_folder ${{ github.workspace }}\package -autoVersion
      - name: Upload UiPath Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Artifacts
          path: |
           package/*.*
           Scripts/*.ps1
  publish-uipath-nuget-package:
    needs: build-uipath-nuget-package
    runs-on: windows-latest
    steps: 
      - name: Download UiPath Artifacts
        uses: actions/download-artifact@v2
        with:
          name: Artifacts
      - name: Publish Nuget Package to DEV
        shell: pwsh
        run: ${{ github.workspace }}\Scripts\UiPathDeploy.ps1 ${{ github.workspace }}\package ${{env.ORCH_URL}} ${{env.ORCH_TENANT}} -UserKey ${{ secrets.UIPATHUSERKEY }} -account_name ${{ secrets.UIPATHACCOUNTNAME }}
 
 
  test-uipath-published-package:
    needs: publish-uipath-nuget-package
    runs-on: windows-latest  
    steps: 
      - name: Download UiPath Artifacts
        uses: actions/download-artifact@v2
        with:
          name: Artifacts
      - name: Test the Package With Test Cases 
        run: ${{ github.workspace }}\scripts\\UiPathRunTest.ps1  ${{env.ORCH_URL}} ${{env.ORCH_TENANT}} -UserKey ${{env.ORCH_USER_KEY}} -account_name ${{env.ORCH_ACC_NAME}} -testset "TestSet1"
  
  create-pull-request:
    needs: test-uipath-published-package
    runs-on: ubuntu-latest
    steps: 
      - name: Download UiPath Artifacts
        run: |
          repo_owner="DemoUserSS"  # Fixed typo
          repo_name="CICD_DisplayFullName"
          base_branch="main"
          head_branch="Developer"
          pr_title="Pull Request From GitHub Action"
          pr_body="Description of your pull request goes here."
          token="${{ secrets.GITHUB_TOKEN }}"
          response=$(curl -X POST \
          -H "Authorization: token $token" \
          -H "Accept: application/vnd.github.v3+json" \
          "https://api.github.com/repos/$repo_owner/$repo_name/pulls" \
          -d "{\"title\":\"$pr_title\",\"head\":\"$head_branch\",\"base\":\"$base_branch\",\"body\":\"$pr_body\"}")
          echo "$response"
 
  notify:
    name: Notify on Slack
    runs-on: ubuntu-latest
  # Only run this workflow when "build" workflow succeeds
    needs: [test-uipath-published-package]
  # Only run this workflow if the target is the main branch on the pull_request event
    if: github.event_name == 'pull_request' && github.event.pull_request.base.ref == 'main'
    steps:
      - uses: abinoda/slack-action@v2
        env:
        # Required: Slack Bot Token
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        with:
        # Custom message to send to Slack
          args: '{\"channel\":\"${{ secrets.SLACK_PR_CHANNEL_ID }}\",\"blocks\":[{\"type\":\"section\",\"text\":{\"type\":\"mrkdwn\",\"text\":\"*Pull Request:* ${{ github.event.pull_request.title }}\"}},{\"type\":\"section\",\"text\":{\"type\":\"mrkdwn\",\"text\":\"*Contributor :* ${{ github.event.pull_request.user.login }}\n*Request State:* ${{ github.event.pull_request.state }}\"}},{\"type\":\"section\",\"text\":{\"type\":\"mrkdwn\",\"text\":\"<${{ github.event.pull_request.html_url }}|View Pull Request>\"}}]}'
